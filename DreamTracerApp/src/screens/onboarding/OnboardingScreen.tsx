/**
 * Ïò®Î≥¥Îî© ÌôîÎ©¥
 * ÎîîÏûêÏù∏ Í∞ÄÏù¥ÎìúÏóê Îî∞Î•∏ "Í≥†ÏöîÌïú ÌÉêÌóò" Ïª®ÏÖâ Íµ¨ÌòÑ
 */
import React, { useState } from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  // Dimensions,
} from 'react-native';
import { useNavigationStore } from '../../stores/navigationStore';
import { useAuthStore } from '../../stores/authStore';

  // const { width, height } = Dimensions.get('window');

const onboardingSteps = [
  {
    id: 1,
    title: 'ÍøàÏùÑ Í∏∞Î°ùÌïòÏÑ∏Ïöî',
    subtitle: 'ÌÖçÏä§Ìä∏ÏôÄ ÏùåÏÑ±ÏúºÎ°ú ÍøàÏùÑ ÏûêÏú†Î°≠Í≤å Í∏∞Î°ùÌï† Ïàò ÏûàÏäµÎãàÎã§',
    icon: 'üìù',
    description: 'Ïû†ÏóêÏÑú Íπ¨ ÏßÅÌõÑÏóêÎèÑ ÏâΩÍ≥† Îπ†Î•¥Í≤å ÍøàÏùò ÎÇ¥Ïö©ÏùÑ Ï†ÄÏû•ÌïòÏÑ∏Ïöî.',
  },
  {
    id: 2,
    title: 'AIÍ∞Ä Î∂ÑÏÑùÌï¥ÎìúÎ¶ΩÎãàÎã§',
    subtitle: 'Ïã¨Î¶¨ÌïôÏ†Å ÌÜµÏ∞∞Í≥º Í∞úÏù∏ÌôîÎêú Ìï¥ÏÑùÏùÑ Ï†úÍ≥µÌï©ÎãàÎã§',
    icon: 'üß†',
    description: 'Google Gemini AIÍ∞Ä ÍøàÏùò ÏÉÅÏßïÍ≥º Í∞êÏ†ï Ìå®ÌÑ¥ÏùÑ Î∂ÑÏÑùÌïòÏó¨ ÏùòÎØ∏Î•º Ï∞æÏïÑÎìúÎ¶ΩÎãàÎã§.',
  },
  {
    id: 3,
    title: 'ÍøàÏùÑ ÏãúÍ∞ÅÌôîÌïòÏÑ∏Ïöî',
    subtitle: '10Í∞ÄÏßÄ ÏïÑÌä∏ Ïä§ÌÉÄÏùºÎ°ú ÍøàÏùÑ ÏòàÏà† ÏûëÌíàÏúºÎ°ú Î≥ÄÌôò',
    icon: 'üé®',
    description: 'Î™ΩÌôòÏ†ÅÏù∏ ÏàòÏ±ÑÌôîÎ∂ÄÌÑ∞ Ï¥àÌòÑÏã§Ï£ºÏùò Ïú†ÌôîÍπåÏßÄ, ÍøàÏùÑ ÏïÑÎ¶ÑÎã§Ïö¥ Ïù¥ÎØ∏ÏßÄÎ°ú ÎßåÎÇòÎ≥¥ÏÑ∏Ïöî.',
  },
  {
    id: 4,
    title: 'ÏïàÏ†ÑÌïú Ïª§ÎÆ§ÎãàÌã∞',
    subtitle: 'ÏùµÎ™ÖÏúºÎ°ú ÍøàÏùÑ Í≥µÏú†ÌïòÍ≥† ÏßëÎã® ÏßÄÏÑ±Ïùò Ìï¥Î™ΩÏùÑ Í≤ΩÌóòÌïòÏÑ∏Ïöî',
    icon: 'üåü',
    description: 'Í∞úÏù∏Ï†ïÎ≥¥Îäî ÏôÑÎ≤ΩÌûà Î≥¥Ìò∏ÎêòÎ©∞, Îî∞ÎúªÌïú Í≥µÍ∞êÍ≥º ÌÜµÏ∞∞ÏùÑ ÎÇòÎàå Ïàò ÏûàÏäµÎãàÎã§.',
  },
];

const OnboardingScreen: React.FC = () => {
  const { navigate } = useNavigationStore();
  const { setOnboardingCompleted } = useAuthStore();
  const [currentStep, setCurrentStep] = useState(0);

  const handleNext = () => {
    if (currentStep < onboardingSteps.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      // Ïò®Î≥¥Îî© ÏôÑÎ£å
      setOnboardingCompleted(true);
      navigate('Home');
    }
  };

  const handleSkip = () => {
    setOnboardingCompleted(true);
    navigate('Home');
  };

  const currentStepData = onboardingSteps[currentStep];

  return (
    <View style={styles.container}>
      <View style={styles.content}>
        {/* ÏïÑÏù¥ÏΩò */}
        <View style={styles.iconContainer}>
          <Text style={styles.icon}>{currentStepData.icon}</Text>
        </View>

        {/* Ï†úÎ™© */}
        <Text style={styles.title}>{currentStepData.title}</Text>
        
        {/* Î∂ÄÏ†úÎ™© */}
        <Text style={styles.subtitle}>{currentStepData.subtitle}</Text>
        
        {/* ÏÑ§Î™Ö */}
        <Text style={styles.description}>{currentStepData.description}</Text>
      </View>

      {/* ÏßÑÌñâ ÌëúÏãúÍ∏∞ */}
      <View style={styles.progressContainer}>
        {onboardingSteps.map((_, index) => (
          <View
            key={index}
            style={[
              styles.progressDot,
              index === currentStep && styles.progressDotActive,
            ]}
          />
        ))}
      </View>

      {/* Î≤ÑÌäºÎì§ */}
      <View style={styles.buttonContainer}>
        <TouchableOpacity
          style={styles.skipButton}
          onPress={handleSkip}
        >
          <Text style={styles.skipButtonText}>Í±¥ÎÑàÎõ∞Í∏∞</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={styles.nextButton}
          onPress={handleNext}
        >
          <Text style={styles.nextButtonText}>
            {currentStep === onboardingSteps.length - 1 ? 'ÏãúÏûëÌïòÍ∏∞' : 'Îã§Ïùå'}
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#191D2E', // Night Sky Blue
    paddingHorizontal: 24,
  },
  content: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  iconContainer: {
    width: 120,
    height: 120,
    borderRadius: 60,
    backgroundColor: '#4A4063', // Dawn Purple
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 40,
    shadowColor: '#FFDDA8',
    shadowOffset: {
      width: 0,
      height: 8,
    },
    shadowOpacity: 0.3,
    shadowRadius: 16,
    elevation: 16,
  },
  icon: {
    fontSize: 48,
  },
  title: {
    fontSize: 32,
    fontWeight: 'bold',
    color: '#FFDDA8', // Starlight Gold
    textAlign: 'center',
    marginBottom: 16,
  },
  subtitle: {
    fontSize: 20,
    color: '#EAE8F0', // Warm Grey 100
    textAlign: 'center',
    marginBottom: 24,
    lineHeight: 28,
  },
  description: {
    fontSize: 16,
    color: '#8F8C9B', // Warm Grey 400
    textAlign: 'center',
    lineHeight: 24,
    paddingHorizontal: 20,
  },
  progressContainer: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 40,
  },
  progressDot: {
    width: 8,
    height: 8,
    borderRadius: 4,
    backgroundColor: '#595566', // Warm Grey 600
    marginHorizontal: 4,
  },
  progressDotActive: {
    backgroundColor: '#FFDDA8', // Starlight Gold
    width: 24,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingBottom: 40,
  },
  skipButton: {
    backgroundColor: 'transparent',
    paddingVertical: 16,
    paddingHorizontal: 24,
  },
  skipButtonText: {
    color: '#8F8C9B', // Warm Grey 400
    fontSize: 16,
    fontWeight: '500',
  },
  nextButton: {
    backgroundColor: '#FFDDA8', // Starlight Gold
    borderRadius: 16,
    paddingVertical: 16,
    paddingHorizontal: 32,
    shadowColor: '#FFDDA8',
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowOpacity: 0.3,
    shadowRadius: 8,
    elevation: 8,
  },
  nextButtonText: {
    color: '#191D2E', // Night Sky Blue
    fontSize: 16,
    fontWeight: 'bold',
  },
});

export default OnboardingScreen;